import {
  NextPage,
  GetServerSideProps,
  InferGetServerSidePropsType
} from 'next';
import Head from 'next/head';
import Link from 'next/link';

import { useContext } from 'react';

import BlackWine from '../../assets/blackWine.svg';

import Header from '../../components/Header';
import NavigationContainer from '../../components/page/NavigationContainer';
import ProductsFound from '../../components/page/ProductsFound';
import FilterPrice from '../../components/page/FilterPrice';
import { Data } from '../../interfaces/products';
import { CartContext } from '../../providers/cart';
import Button from '../../styles/components/Button';
import {
  Container,
  Content,
  MainContent,
  PriceOff,
  PricePartner,
  ProductBox,
  ProductsGrid,
  SealContainer
} from '../../styles/pages/Page';
import formatCurrency from '../../utils/formatCurrency';

export const getServerSideProps: GetServerSideProps = async ({
  params,
  query
}) => {
  const res = await fetch(
    `https://wine-back-test.herokuapp.com/products?page=${
      params.page
    }&limit=9&filter=${query.price}&name=${query.name ? query.name : ''}`
  );
  const data: Data = await res.json();

  return {
    props: {
      data,
      query
    }
  };
};

const Page: NextPage = ({
  data,
  query
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const { addToCart } = useContext(CartContext);

  return (
    <div>
      <Head>
        <title>Wine | Compre vinhos online com descontos exclusivos!</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Header />
      <main>
        <Container>
          <Content>
            <FilterPrice query={query} />
            <MainContent>
              <ProductsFound data={data} query={query} />
              <ProductsGrid>
                {data.items.map(product => (
                  <div key={product.id}>
                    <Link href={`/product/${product.id}`}>
                      <ProductBox>
                        <SealContainer>
                          <BlackWine />
                        </SealContainer>
                        <img src={product.image} alt={product.name} />
                        <h2>{product.name}</h2>
                        <PriceOff>
                          <p>R$ {product.price.toFixed(2)}</p>
                          <span> {product.discount}% off</span>
                        </PriceOff>
                        <PricePartner>
                          <p>sócio wine</p>
                          <p>
                            R$
                            <span>
                              {product.priceMember.toString().split('.')[0]}
                            </span>
                            ,
                            {
                              product.priceMember
                                .toFixed(2)
                                .toString()
                                .split('.')[1]
                            }
                          </p>
                        </PricePartner>
                        <p>
                          não sócio {formatCurrency(product.priceNonMember)}
                        </p>
                      </ProductBox>
                    </Link>
                    <Button
                      className="button button-desktop"
                      width="256px"
                      marginBottom="30px"
                      fontSize="14px"
                      uppercase
                      onClick={() => addToCart(product, 1)}
                    >
                      adicionar
                    </Button>
                    <Button
                      className="button button-mobile"
                      width="156px"
                      height="40px"
                      marginBottom="24px"
                      fontSize="14px"
                      onClick={() => addToCart(product, 1)}
                    >
                      adicionar
                    </Button>
                  </div>
                ))}
              </ProductsGrid>
              <NavigationContainer data={data} query={query} />
            </MainContent>
          </Content>
        </Container>
      </main>
    </div>
  );
};
export default Page;
