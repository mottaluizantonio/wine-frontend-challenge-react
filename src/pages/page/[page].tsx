import {
  NextPage,
  GetServerSideProps,
  InferGetServerSidePropsType
} from 'next';
import Head from 'next/head';
import Link from 'next/link';

import BlackWine from '../../assets/blackWine.svg';

import Header from '../../components/Header';
import { Data } from '../../interfaces/products';
import { Button } from '../../styles/components/Button';
import {
  Container,
  Content,
  LineDiv,
  NavigationContainer,
  PriceOff,
  PricePartner,
  ProductBox,
  ProductsGrid,
  SealContainer,
  SearchContainer
} from '../../styles/pages/Page';
import formatCurrency from '../../utils/formatCurrency';

export const getServerSideProps: GetServerSideProps = async ({
  params,
  query
}) => {
  const res = await fetch(
    `https://wine-back-test.herokuapp.com/products?page=${params.page}&limit=9&filter=${query.price}`
  );
  const data: Data = await res.json();

  return {
    props: {
      data
    }
  };
};

const Page: NextPage = ({
  data
}: InferGetServerSidePropsType<typeof getServerSideProps>) => (
  <div>
    <Head>
      <title>Wine | Compre vinhos online com descontos exclusivos!</title>
      <meta name="description" content="Generated by create next app" />
      {/* <link rel="icon" href="/favicon.ico" /> */}
    </Head>

    <Header />
    <main>
      <Container>
        <SearchContainer>
          <h4>Refine sua busca</h4>
          <p>Por preço</p>
        </SearchContainer>
        <Content>
          <p>
            <span>{data.totalItems}</span> produtos encontrados
          </p>
          <LineDiv />
          <ProductsGrid>
            {data.items.map(product => (
              <div>
                <Link href={`/product/${product.id}`}>
                  <ProductBox key={product.id}>
                    <SealContainer>
                      <BlackWine />
                    </SealContainer>
                    <img src={product.image} alt={product.name} />
                    <h2>{product.name}</h2>
                    <PriceOff>
                      <p>R$ {product.price.toFixed(2)}</p>
                      <span> {product.discount}% off</span>
                    </PriceOff>
                    <PricePartner>
                      <p>sócio wine</p>
                      <p>
                        R$
                        <span>
                          {product.priceMember.toString().split('.')[0]}
                        </span>
                        ,
                        {
                          product.priceMember
                            .toFixed(2)
                            .toString()
                            .split('.')[1]
                        }
                      </p>
                    </PricePartner>
                    <p>não sócio {formatCurrency(product.priceNonMember)}</p>
                  </ProductBox>
                </Link>
                <Button
                  className="button-desktop"
                  width="256px"
                  marginBottom="30px"
                  fontSize="14px"
                  uppercase
                >
                  adicionar
                </Button>
                <Button
                  className="button-mobile"
                  width="156px"
                  height="40px"
                  marginBottom="24px"
                  fontSize="14px"
                >
                  adicionar
                </Button>
              </div>
            ))}
          </ProductsGrid>
        </Content>
        <NavigationContainer>
          {data.page - 1 > 0 && (
            <>
              <Link href={`/page/${data.page - 1}`}>
                <p className="pointer">&lt;&lt; Anterior</p>
              </Link>
              {data.page > 2 && <p>...</p>}
              <Link href={`/page/${data.page - 1}`}>
                <div>{data.page - 1}</div>
              </Link>
            </>
          )}
          <div className="current-page no-pointer">{data.page}</div>
          {data.page + 1 <= data.totalPages && (
            <>
              <Link href={`/page/${data.page + 1}`}>
                <div>{data.page + 1}</div>
              </Link>
              {data.page + 1 < data.totalPages && <p>...</p>}
              <Link href={`/page/${data.page + 1}`}>
                <p className="pointer">Próximo &gt;&gt;</p>
              </Link>
            </>
          )}
        </NavigationContainer>
      </Container>
    </main>
  </div>
);

export default Page;
