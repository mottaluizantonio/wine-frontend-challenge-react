import {
  NextPage,
  GetServerSideProps,
  InferGetServerSidePropsType
} from 'next';
import { useRouter } from 'next/router';

import Head from 'next/head';
import Header from '../../components/Header';

import Return from '../../assets/return.svg';
import ArrowRegion from '../../assets/arrowRegion.svg';
import StarEmpty from '../../assets/starEmpty.svg';
import StarFull from '../../assets/starFull.svg';
import RoundEmpty from '../../assets/roundEmpty.svg';
import RoundEmptyFade from '../../assets/roundEmptyFade.svg';

import {
  ButtonContainer,
  Container,
  ContainerReturn,
  Content,
  ContentLeft,
  ContentRight,
  DescriptionContainer,
  DivClickReturn,
  FooterMobile,
  InfoContainer,
  PriceDivMobile,
  PriceOffContainer,
  PricesContainer,
  ProductHeader,
  RegionContainer
} from '../../styles/pages/Product';
import Button from '../../styles/components/Button';
import formatCurrency from '../../utils/formatCurrency';
import { Data, Item } from '../../interfaces/products';

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  const res = await fetch(`https://wine-back-test.herokuapp.com/products?`);
  const data: Data = await res.json();
  const findProduct: Item = data.items.find(
    product => product.id === +params.product
  );

  return {
    props: {
      findProduct
    }
  };
};

const Product: NextPage = ({
  findProduct
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const router = useRouter();

  return (
    <div>
      <Head>
        <title>{findProduct.name} - Wine | Wine</title>
        <meta name="description" content="Generated by create next app" />
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>

      <Header />
      <main>
        <Container>
          <ContainerReturn>
            <DivClickReturn onClick={() => router.back()}>
              <Return />
              Voltar
            </DivClickReturn>
          </ContainerReturn>
          <Content>
            <ContentLeft>
              <img src={findProduct.image} alt={findProduct.name} />
            </ContentLeft>
            <ContentRight>
              <ProductHeader>
                <RegionContainer>
                  <span>Vinhos</span>
                  <ArrowRegion />
                  <span>{findProduct.country}</span>
                  <ArrowRegion />
                  <span>{findProduct.region}</span>
                </RegionContainer>
                <h1>{findProduct.name}</h1>
                <InfoContainer>
                  <img src={findProduct.flag} alt={findProduct.country} />
                  <p>{findProduct.country}</p>
                  <p>{findProduct.type}</p>
                  <p>{findProduct.classification}</p>
                  <p>{findProduct.size}</p>
                  {findProduct.rating > 0 ? <StarFull /> : <StarEmpty />}
                  {findProduct.rating > 1 ? <StarFull /> : <StarEmpty />}
                  {findProduct.rating > 2 ? <StarFull /> : <StarEmpty />}
                  {findProduct.rating > 3 ? <StarFull /> : <StarEmpty />}
                  {findProduct.rating > 4 ? <StarFull /> : <StarEmpty />}
                  <p>({findProduct.avaliations})</p>
                </InfoContainer>
              </ProductHeader>
              <img src={findProduct.image} alt={findProduct.name} />
              <PricesContainer>
                <p>
                  R$&nbsp;
                  <span className="price-big">
                    {findProduct.priceMember.toString().split('.')[0]}
                  </span>
                  <span className="price-medium">
                    ,
                    {
                      findProduct.priceMember
                        .toFixed(2)
                        .toString()
                        .split('.')[1]
                    }
                  </span>
                </p>
                <span>
                  NÃO SÓCIO {formatCurrency(findProduct.priceNonMember)}/UN.
                </span>
              </PricesContainer>
              <DescriptionContainer>
                <h3>Descrição</h3>
                <h3>Comentário do Sommelier</h3>
                <p>{findProduct.sommelierComment}</p>
              </DescriptionContainer>
              <ButtonContainer>
                <div>
                  <RoundEmptyFade />
                  <p>-</p>1<p>+</p>
                  <RoundEmpty />
                </div>
                <div>Adicionar</div>
              </ButtonContainer>
            </ContentRight>
          </Content>
          <FooterMobile>
            <div>
              <PriceOffContainer>{findProduct.discount}% off</PriceOffContainer>
              <PriceDivMobile>
                <div>{formatCurrency(findProduct.price)}</div>
                <div>{formatCurrency(findProduct.priceMember)}</div>
                <div>
                  preço não-sócio {formatCurrency(findProduct.priceNonMember)}
                </div>
              </PriceDivMobile>
            </div>
            <div>
              <Button>adicionar</Button>
            </div>
          </FooterMobile>
        </Container>
      </main>
    </div>
  );
};

export default Product;
